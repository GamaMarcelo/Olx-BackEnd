# # Ignore arquivos temporários do Visual Studio, crie resultados e
# # arquivos gerados por complementos populares do Visual Studio.
# #
# # Obtenha o mais recente em https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# Arquivos específicos do usuário
*.rsuser
*.suo
*.usuário
*.userosscache
*.sln.docstates
*.code-workspace

# Arquivos específicos do usuário (MonoDevelop/Xamarin Studio)
*.userprefs

# Arquivos mono gerados automaticamente
mono_crash.*

# Construir resultados
[Dd]ebug/
[Dd]ebugPublic/
[Rr]liberar/
[Rr]libera/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]em/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Diretório de cache/opções do Visual Studio 2015/2017
.vs/

# Diretório de cache/opções do Visual Studio Code
.vscode/*

# Descomente se você tiver tarefas que criam os arquivos estáticos do projeto em wwwroot
# wwwroot/

# Arquivos gerados automaticamente pelo Visual Studio 2017
Gerado\Arquivos/

# Resultados do teste MSTest
[Tt]est[Rr]resultado*/
[Bb]uild[Ll]og.*

#NUnit _
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Construir resultados de um projeto ATL
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Resultados de referência
BenchmarkDotNet.Artifacts/

# .NET Núcleo
projeto.lock.json
project.fragment.lock.json
artefatos/

# StyleCop
StyleCopReport.xml

# Arquivos criados pelo Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.construções
*.pidb
*.svclog
*.scc

# Arquivos de teste Chutzpah
_Chutzpah*

# Arquivos de cache do Visual C++
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Criador de perfil do Visual Studio
*.psess
*.vsp
*.vspx
*.sap

# Arquivos de rastreamento do Visual Studio
*.e2e

# Espaço de trabalho local do TFS 2012
$tf/

# Kit de ferramentas de automação de orientação
*.gpState

# ReSharper é um suplemento de codificação .NET
_ReSharper*/
*.[Rr]e[Ss]harpista
*.DotSettings.user

# TeamCity é um suplemento de construção
_TeamCity*

# DotCover é uma ferramenta de cobertura de código
*.dotCover

# AxoCover é uma ferramenta de cobertura de código
.axoCover/*
!.axoCover/settings.json

# Resultados da cobertura de código do Visual Studio
*.cobertura
*.coveragexml

# N Crunch
_NCrunch_*
.*crise*.local.xml
nCrunchTemp_*

#MightyMoose _
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Pasta de saída Installshield
[Ee]xpress/

# DocProject é um add-in gerador de documentação
DocProject/buildhelp/
DocProject/Ajuda/*.HxT
DocProject/Ajuda/*.HxC
DocProject/Ajuda/*.hhc
DocProject/Ajuda/*.hhk
DocProject/Ajuda/*.hhp
DocProject/Ajuda/Html2
DocProject/Ajuda/html

# Diretório Click-Once
publicar/

# Publicar saída da Web
*.[Pp]ublish.xml
*.azurePubxml
# Nota: Comente a próxima linha se quiser verificar suas configurações de implantação da web,
# mas as strings de conexão do banco de dados (com possíveis senhas) serão descriptografadas
*.pubxml
*.publishproj

# Configurações de publicação do Microsoft Azure Web App. Comente a próxima linha se quiser
# verificando as configurações de publicação do aplicativo Web do Azure, mas as informações confidenciais contidas
# nestes scripts serão descriptografados
PublishScripts/

# Pacotes NuGet
*.nupkg
# Pacotes de símbolos NuGet
*.snupkg
# A pasta de pacotes pode ser ignorada por causa da restauração do pacote
**/[Pp]ackages/*
# exceto build/, que é usado como um destino do MSBuild.
!**/[Pp]pacotes/build/
# Descomente se necessário, mas geralmente ele será regenerado quando necessário
# !**/[Pp]ackages/repositories.config
# Os arquivos project.json do NuGet v3 produzem mais arquivos ignoráveis
*.nuget.props
*.nuget.targets

# Saída de compilação do Microsoft Azure
csx/
*.build.csdef

# Emulador do Microsoft Azure
ecf/
rcf/

# Diretórios e arquivos de pacotes de aplicativos da Windows Store
AppPackages/
Pacote de Artefatos/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Arquivos de cache do Visual Studio
# arquivos terminados em .cache podem ser ignorados
*.[Cc]dor
# mas rastreie os diretórios que terminam em .cache
!?*.[Cc]dor/

# Outros
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Incluir arquivos de nome forte pode apresentar um risco de segurança
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
# *.snk

# Como existem vários fluxos de trabalho, remova o comentário da próxima linha para ignorar bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# bower_components/

# Projetos RIA/Silverlight
Código_gerado/

# Arquivos de backup e relatório da conversão de um arquivo de projeto antigo
# para uma versão mais recente do Visual Studio. Arquivos de backup não são necessários,
# porque temos git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# arquivos SQL Server
*.mdf
*.ldf
*.ndf

# Projetos de Business Intelligence
*.rdl.data
*.bim.layout
*.bim_ * .configurações
*.rptproj.rsuser
*-[Bb]ackup.rdl
*-[Bb]ackup([0-9]).rdl
*-[Bb]ackup([0-9][0-9]).rdl

#Microsoft Falsificações
FalsificaçõesAssemblies/

# Arquivo de configuração do plugin GhostDoc
*.GhostDoc.xml

# Ferramentas Node.js para Visual Studio
.ntvs_analysis.dat

# Registros
Histórico
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Relatórios de diagnóstico (https://nodejs.org/api/report.html)
relatório.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Dados de tempo de execução
pids
*.pid
*.semente
*.pid.lock

# Diretório para bibliotecas instrumentadas geradas por jscoverage/JSCover
lib-cov

# Diretório de cobertura usado por ferramentas como Istambul
cobertura
*.lcov

# cobertura de teste de nyc
.nyc_output

# Armazenamento intermediário do Grunt (https://gruntjs.com/creating-plugins#storing-task-files)
.grunhido

# Diretório de dependências do Bower (https://bower.io/)
bower_components

# configuração do node-waf
.lock-wscript

# Addons binários compilados (https://nodejs.org/api/addons.html)
construir/liberar

# Diretórios de dependência
node_modules/
jspm_packages/

# Arquivos de declaração TypeScript v1
digitações/

# Cache do TypeScript
* .tsbuildinfo

# Diretório de cache npm opcional
.npm

# Cache eslint opcional
.eslintcache

# Cache de micropacote
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Histórico REPL opcional
.node_repl_history

# Saída do 'pacote npm'
* .tgz

# Arquivo de integridade do fio
.yarn-integridade

# arquivo de variáveis ​​de ambiente dotenv
.env
.env.teste

# cache do empacotador de parcelas (https://parceljs.org/)
.cache

# Next.js build output
.próximo

# Nuxt.js constrói/gera saída
.nuxt
dist.

# Arquivos Gatsby
.cache/
# Comente na linha pública se seu projeto usa Gatsby e *não* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# público

# vuepress build output
.vuepress/dist

# Diretórios sem servidor
.sem servidor/

#Cache FuseBox
.fusebox/

# Arquivos locais do DynamoDB
.dynamodb/


# arquivo de porta TernJS
.tern-port

# Registro de compilação do Visual Studio 6
* .plg

# Arquivo de opções do espaço de trabalho do Visual Studio 6
* .opt

# Arquivo de espaço de trabalho gerado automaticamente pelo Visual Studio 6 (contém quais arquivos foram abertos, etc.)
* .vbw

# Saída de compilação do Visual Studio LightSwitch
**/* .HTMLClient/GeneratedArtifacts
**/* .DesktopClient/GeneratedArtifacts
**/* .DesktopClient/ModelManifest.xml
**/* .Server/GeneratedArtifacts
**/* .Server/ModelManifest.xml
_Pvt_Extensions

# Gerenciador de dependências de pacotes
.paket/paket.exe
arquivos de pacote/

#FAKE - F# Make
.falso/

# Configurações pessoais do CodeRush
.cr/pessoal

# Ferramentas Python para Visual Studio (PTVS)
__pycache__/
*.pyc

#Bolo - Descomente se estiver usando
# ferramentas/**
# !tools/packages.config

# Tabs Studio
*.tss

# Arquivo de configuração JustMock do Telerik
*.jmconfig

# Saída de compilação do BizTalk
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# Resultados da análise da interface do usuário do OpenCover
OpenCover/

# Saída de execução local do Azure Stream Analytics
ASALocalRun/

# Log binário e estruturado do MSBuild
*.binlog

# Arquivo de configuração do depurador GPU NVidia Nsight
*.nvuser

# Pasta de trabalho MFractors (ferramenta de produtividade Xamarin)
.mfractor/

# Histórico local para Visual Studio
.localhistory/

# Banco de dados temporário de verificação de integridade do BeatPulse
healthchecksdb

# Pasta de backup para a ferramenta Package Reference Convert no Visual Studio 2017
Backup de Migração/

# Pasta de trabalho Ionide (ferramentas F# VS Code de plataforma cruzada)
.ionide/